<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--

name space: 名称空间
-->

<mapper namespace="com.yonyou.mapper.BrandMapper">

    <!--
        数据库的字段名称 和 实体类属性名称不一致 ， 数据库使用下划线命名法，实体类使用驼峰命名法。
            * 起别名： select a as A， 改名字
                *缺点：每次都需要改名
                    *解决方案：定义sql片段
                        *缺点：不灵活
            * ResultMap
                1. 定义ResultMap
                2. 在<select> 标签中，将resultType替换成 resultMap

    -->

<!--    <select id="selectAll" resultType="com.yonyou.pojo.Brand">-->
<!--        select * from tb_brand;-->
<!--    </select>-->
    <!--
        id: 唯一标识
        type：映射类型
     -->

    <resultMap id = "brandResultMap" type = "com.yonyou.pojo.Brand">

        <!--
            子标签两种
            id: 主键字段映射
                column:表的类名
                property:映射的类名，支持别名
            result：一般字段的映射
        -->

        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>


    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>



    <!--
        占位符：
            1. #{}: 占位符 ？，防止sql注入
            2. ${}: 不能用，会传递string
        特殊字符的处理，
            1. 转义字符 &lt;
            2. cdata区 纯文本 <
    -->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>


    <!--
        条件查询三种方式：

    -->
<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where status = #{status}-->
<!--            and company_name like #{companyName}-->
<!--            and brand_name like #{brandName};-->
<!--    </select>-->
    <!--
        动态条件查询
        问题:如果第一个条件不在，直接and会报错
        解决： 恒等式 1=1 加在最前面
            <where> 标签替换where关键字
    -->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="brand_name != null and brand_name != '' ">
                and brand_name like #{brandName}
            </if>
            <if test="companyName != null and companyName != '' ">
                and company_name like #{companyName}
            </if>
        </where>

    </select>

    <select id="selectByConditionSingle" resultType="com.yonyou.pojo.Brand">
        select *
        from tb_brand
        <choose>
            <when test="status != null">
                and status = #{status}
            </when>
            <when test="brand_name != null and brand_name != '' ">
                and brand_name like #{brandName}
            </when>
            <when test="companyName != null and companyName != '' ">
                and company_name like #{companyName}
            </when>
        </choose>

    </select>

    <insert id="add" useGeneratedKeys = "true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});

    </insert>



    <!--
    动态sql 开发
    -->
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};

    </update>


    <delete id="deleteById">
        delete from tb_brand
        where id = #{id};
    </delete>
    <delete id="deleteByIds">
        delete from tb_brand
        where id in (
            <foreach collection="array" item = "id" separator=",">
                #{id}
            </foreach>

        );


    </delete>


</mapper>